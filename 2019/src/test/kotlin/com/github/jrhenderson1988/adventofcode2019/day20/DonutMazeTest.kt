package com.github.jrhenderson1988.adventofcode2019.day20

import org.junit.Assert.assertEquals
import org.junit.Test

class DonutMazeTest {
    companion object {
        const val A = """
                     A           
                     A           
              #######.#########  
              #######.........#  
              #######.#######.#  
              #######.#######.#  
              #######.#######.#  
              #####  B    ###.#  
            BC...##  C    ###.#  
              ##.##       ###.#  
              ##...DE  F  ###.#  
              #####    G  ###.#  
              #########.#####.#  
            DE..#######...###.#  
              #.#########.###.#  
            FG..#########.....#  
              ###########.#####  
                         Z       
                         Z       
        """

        const val B = """
                               A               
                               A               
              #################.#############  
              #.#...#...................#.#.#  
              #.#.#.###.###.###.#########.#.#  
              #.#.#.......#...#.....#.#.#...#  
              #.#########.###.#####.#.#.###.#  
              #.............#.#.....#.......#  
              ###.###########.###.#####.#.#.#  
              #.....#        A   C    #.#.#.#  
              #######        S   P    #####.#  
              #.#...#                 #......VT
              #.#.#.#                 #.#####  
              #...#.#               YN....#.#  
              #.###.#                 #####.#  
            DI....#.#                 #.....#  
              #####.#                 #.###.#  
            ZZ......#               QG....#..AS
              ###.###                 #######  
            JO..#.#.#                 #.....#  
              #.#.#.#                 ###.#.#  
              #...#..DI             BU....#..LF
              #####.#                 #.#####  
            YN......#               VT..#....QG
              #.###.#                 #.###.#  
              #.#...#                 #.....#  
              ###.###    J L     J    #.#.###  
              #.....#    O F     P    #.#...#  
              #.###.#####.#.#####.#####.###.#  
              #...#.#.#...#.....#.....#.#...#  
              #.#####.###.###.#.#.#########.#  
              #...#.#.....#...#.#.#.#.....#.#  
              #.###.#####.###.###.#.#.#######  
              #.#.........#...#.............#  
              #########.###.###.#############  
                       B   J   C               
                       U   P   P                
        """

        const val C = """
                         Z L X W       C                 
                         Z P Q B       K                 
              ###########.#.#.#.#######.###############  
              #...#.......#.#.......#.#.......#.#.#...#  
              ###.#.#.#.#.#.#.#.###.#.#.#######.#.#.###  
              #.#...#.#.#...#.#.#...#...#...#.#.......#  
              #.###.#######.###.###.#.###.###.#.#######  
              #...#.......#.#...#...#.............#...#  
              #.#########.#######.#.#######.#######.###  
              #...#.#    F       R I       Z    #.#.#.#  
              #.###.#    D       E C       H    #.#.#.#  
              #.#...#                           #...#.#  
              #.###.#                           #.###.#  
              #.#....OA                       WB..#.#..ZH
              #.###.#                           #.#.#.#  
            CJ......#                           #.....#  
              #######                           #######  
              #.#....CK                         #......IC
              #.###.#                           #.###.#  
              #.....#                           #...#.#  
              ###.###                           #.#.#.#  
            XF....#.#                         RF..#.#.#  
              #####.#                           #######  
              #......CJ                       NM..#...#  
              ###.#.#                           #.###.#  
            RE....#.#                           #......RF
              ###.###        X   X       L      #.#.#.#  
              #.....#        F   Q       P      #.#.#.#  
              ###.###########.###.#######.#########.###  
              #.....#...#.....#.......#...#.....#.#...#  
              #####.#.###.#######.#######.###.###.#.#.#  
              #.......#.......#.#.#.#.#...#...#...#.#.#  
              #####.###.#####.#.#.#.#.###.###.#.###.###  
              #.......#.....#.#...#...............#...#  
              #############.#.#.###.###################  
                           A O F   N                     
                           A A D   M                                 
        """
    }

    @Test
    fun calculateDistanceOfShortestPath() =
        mapOf(A to 23, B to 58)
            .forEach { (input, expected) ->
                assertEquals(expected, DonutMaze.parse(input.trimIndent()).calculateDistanceOfShortestPath())
            }

    @Test
    fun calculateDistanceOfShortestRecursivePath() =
        mapOf(A to 26, B to null, C to 396)
            .forEach { (input, expected) ->
                assertEquals(expected, DonutMaze.parse(input.trimIndent()).calculateDistanceOfShortestRecursivePath())
            }
}